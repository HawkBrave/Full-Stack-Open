{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/yigityilmaz/Documents/PersonalProjects/Fullstackopen/part1/courseinfo/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport _ from 'lodash';\n\nconst Part = props => /*#__PURE__*/_jsxDEV(\"p\", {\n  children: [props.name, \" \", props.exercise]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 3\n}, this);\n\n_c = Part;\n\nconst Content = ({\n  names,\n  exercises\n}) => {\n  let parts = _.zip(names, exercises).map(val => /*#__PURE__*/_jsxDEV(Part, {\n    name: val[0],\n    exercise: val[1]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this));\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: parts\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Content;\n\nconst Total = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Number of exercises \", props.total]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 23,\n  columnNumber: 3\n}, this);\n\n_c3 = Total;\n\nconst Button = props => {\n  const style = {\n    backgroundColor: \"grey\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: props.handleClick,\n    children: props.text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this);\n};\n\n_c4 = Button;\n\nconst Display = props => /*#__PURE__*/_jsxDEV(\"h3\", {\n  children: props.counter\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 40,\n  columnNumber: 26\n}, this);\n\n_c5 = Display;\n\nconst App = () => {\n  _s();\n\n  const [counter, setCounter] = useState(0);\n  const course = 'Half Stack application development';\n  const part1 = 'Fundamentals of React';\n  const exercises1 = 10;\n  const part2 = 'Using props to pass data';\n  const exercises2 = 7;\n  const part3 = 'State of a component';\n  const exercises3 = 14;\n\n  const inc = () => setCounter(counter + 1);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: course\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Display, {\n      counter: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      names: [part1, part2, part3],\n      exercises: [exercises1, exercises2, exercises3]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Total, {\n      total: exercises1 + exercises2 + exercises3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: inc,\n      text: \"increment counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"mgO7WMHyhiBnLtH7uw/qAj2Cy9A=\");\n\n_c6 = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 69,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Part\");\n$RefreshReg$(_c2, \"Content\");\n$RefreshReg$(_c3, \"Total\");\n$RefreshReg$(_c4, \"Button\");\n$RefreshReg$(_c5, \"Display\");\n$RefreshReg$(_c6, \"App\");","map":{"version":3,"sources":["/Users/yigityilmaz/Documents/PersonalProjects/Fullstackopen/part1/courseinfo/src/index.js"],"names":["React","useState","ReactDOM","_","Part","props","name","exercise","Content","names","exercises","parts","zip","map","val","Total","total","Button","style","backgroundColor","handleClick","text","Display","counter","App","setCounter","course","part1","exercises1","part2","exercises2","part3","exercises3","inc","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\nimport _ from 'lodash'\n\nconst Part = props => (\n  <p>\n    {props.name} {props.exercise}\n  </p>\n)\n\nconst Content = ({names, exercises}) => {\n  let parts = _.zip(names, exercises).map(val => (\n    <Part name={val[0]} exercise={val[1]} />\n  ));\n  return (\n    <div>\n      {parts}\n    </div>\n  );\n}\n\nconst Total = props => (\n  <div>\n    <p>Number of exercises {props.total}</p>\n  </div>\n);\n\nconst Button = props => {\n  const style = {\n    backgroundColor: \"grey\",\n    \n  }\n  return (\n  <button onClick={props.handleClick}>\n    {props.text}\n  </button>\n  );\n}\n\nconst Display = props => <h3>{props.counter}</h3>\n\nconst App = () => {\n  const [counter, setCounter] = useState(0);\n\n  const course = 'Half Stack application development';\n  const part1 = 'Fundamentals of React';\n  const exercises1 = 10;\n  const part2 = 'Using props to pass data';\n  const exercises2 = 7;\n  const part3 = 'State of a component';\n  const exercises3 = 14;\n\n  const inc = () => setCounter(counter + 1)\n\n  return (\n    <div>\n      <h1>{course}</h1>\n      <Display counter={counter}/>\n      <Content names={[part1, part2, part3]} exercises={[exercises1, exercises2, exercises3]}/>\n      <Total total={exercises1 + exercises2 + exercises3}/>\n      <Button \n        handleClick={inc}\n        text={\"increment counter\"}\n      />\n    </div>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}