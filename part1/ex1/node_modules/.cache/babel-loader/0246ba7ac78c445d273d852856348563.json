{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/yigityilmaz/Documents/PersonalProjects/Fullstackopen/part1/ex1/src/components/Course.js\";\n\nconst Header = ({\n  course\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: course\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Header;\n\nconst Part = ({\n  name,\n  exercises\n}) => /*#__PURE__*/_jsxDEV(\"p\", {\n  children: [name, \" \", exercises]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this);\n\n_c2 = Part;\n\nconst Content = ({\n  parts\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: parts.map(part => /*#__PURE__*/_jsxDEV(Part, {\n      name: part.name,\n      exercises: part.exercises\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 26\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = Content;\n\nconst Total = ({\n  parts\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Number of exercises \", parts.reduce((acc, part) => acc + part.exercises, 0)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 22,\n  columnNumber: 3\n}, this);\n\n_c4 = Total;\nexport default Course;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Part\");\n$RefreshReg$(_c3, \"Content\");\n$RefreshReg$(_c4, \"Total\");","map":{"version":3,"sources":["/Users/yigityilmaz/Documents/PersonalProjects/Fullstackopen/part1/ex1/src/components/Course.js"],"names":["Header","course","Part","name","exercises","Content","parts","map","part","Total","reduce","acc","Course"],"mappings":";;;AAAA,MAAMA,MAAM,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAc;AAC3B,sBACE;AAAA,cAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAJD;;KAAMD,M;;AAMN,MAAME,IAAI,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,kBACX;AAAA,aACGD,IADH,OACUC,SADV;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;MAAMF,I;;AAMN,MAAMG,OAAO,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAC3B,sBACE;AAAA,cACGA,KAAK,CAACC,GAAN,CAAUC,IAAI,iBAAI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEA,IAAI,CAACL,IAAjB;AAAuB,MAAA,SAAS,EAAEK,IAAI,CAACJ;AAAvC;AAAA;AAAA;AAAA;AAAA,YAAlB;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND;;MAAMC,O;;AAQN,MAAMI,KAAK,GAAG,CAAC;AAACH,EAAAA;AAAD,CAAD,kBACZ;AAAA,yBACE;AAAA,uCAAwBA,KAAK,CAACI,MAAN,CAAa,CAACC,GAAD,EAAMH,IAAN,KAAeG,GAAG,GAAGH,IAAI,CAACJ,SAAvC,EAAkD,CAAlD,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF;;MAAMK,K;AAMN,eAAeG,MAAf","sourcesContent":["const Header = ({course}) => {\n  return (\n    <h1>{course}</h1>\n  );\n}\n\nconst Part = ({name, exercises}) => (\n  <p>\n    {name} {exercises}\n  </p>\n)\n\nconst Content = ({parts}) => {\n  return (\n    <div>\n      {parts.map(part => <Part name={part.name} exercises={part.exercises}/>)}\n    </div>\n  );\n}\n\nconst Total = ({parts}) => (\n  <div>\n    <p>Number of exercises {parts.reduce((acc, part) => acc + part.exercises, 0)}</p>\n  </div>\n);\n\nexport default Course;"]},"metadata":{},"sourceType":"module"}