{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/yigityilmaz/Documents/PersonalProjects/Fullstackopen/part1/courseinfo/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport _, { set } from 'lodash';\n\nconst Part = ({\n  name,\n  exercise\n}) => /*#__PURE__*/_jsxDEV(\"p\", {\n  children: [name, \" \", exercise]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 3\n}, this);\n\n_c = Part;\n\nconst Content = ({\n  names,\n  exercises\n}) => {\n  let parts = _.zip(names, exercises).map(val => /*#__PURE__*/_jsxDEV(Part, {\n    name: val[0],\n    exercise: val[1]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this));\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: parts\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Content;\n\nconst Total = ({\n  total\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Number of exercises \", total]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 24,\n  columnNumber: 3\n}, this);\n\n_c3 = Total;\n\nconst Button = ({\n  id,\n  handleClick,\n  text\n}) => /*#__PURE__*/_jsxDEV(\"button\", {\n  className: \"button\",\n  id: id,\n  onClick: handleClick,\n  children: text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 30,\n  columnNumber: 3\n}, this);\n\n_c4 = Button;\n\nconst Display = ({\n  counter,\n  allClicks\n}) => {\n  let clicks = \"none\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Counter: \", counter]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"All clicks made: \", clicks]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_c5 = Display;\n\nconst App = () => {\n  _s();\n\n  const [counter, setCounter] = useState(0);\n  const [allClicks, setAll] = useState([]);\n  const course = 'Half Stack application development';\n  const part1 = 'Fundamentals of React';\n  const exercises1 = 10;\n  const part2 = 'Using props to pass data';\n  const exercises2 = 7;\n  const part3 = 'State of a component';\n  const exercises3 = 14;\n\n  const incr = () => {\n    setAll(allClicks.concat('inc\\n'));\n    setCounter(counter + 1);\n  };\n\n  const decr = () => {\n    setAll(allClicks.concat('decr\\n'));\n    setCounter(counter > 0 ? counter - 1 : 0);\n  };\n\n  const setzero = () => {\n    setAll([]);\n    setCounter(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: course\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Display, {\n      counter: counter,\n      allClicks: allClicks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      names: [part1, part2, part3],\n      exercises: [exercises1, exercises2, exercises3]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Total, {\n      total: exercises1 + exercises2 + exercises3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        handleClick: incr,\n        id: \"incr\",\n        text: \"increment counter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        handleClick: decr,\n        text: \"decrement counter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        handleClick: setzero,\n        text: \"set to zero\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"KBRuFFY9d0peLNXx9jo3sU31uvY=\");\n\n_c6 = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 95,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Part\");\n$RefreshReg$(_c2, \"Content\");\n$RefreshReg$(_c3, \"Total\");\n$RefreshReg$(_c4, \"Button\");\n$RefreshReg$(_c5, \"Display\");\n$RefreshReg$(_c6, \"App\");","map":{"version":3,"sources":["/Users/yigityilmaz/Documents/PersonalProjects/Fullstackopen/part1/courseinfo/src/index.js"],"names":["React","useState","ReactDOM","_","set","Part","name","exercise","Content","names","exercises","parts","zip","map","val","Total","total","Button","id","handleClick","text","Display","counter","allClicks","clicks","App","setCounter","setAll","course","part1","exercises1","part2","exercises2","part3","exercises3","incr","concat","decr","setzero","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport _, { set } from 'lodash'\n\nconst Part = ({name, exercise}) => (\n  <p>\n    {name} {exercise}\n  </p>\n)\n\nconst Content = ({names, exercises}) => {\n  let parts = _.zip(names, exercises).map(val => (\n    <Part name={val[0]} exercise={val[1]} />\n  ));\n  return (\n    <div>\n      {parts}\n    </div>\n  );\n}\n\nconst Total = ({total}) => (\n  <div>\n    <p>Number of exercises {total}</p>\n  </div>\n);\n\nconst Button = ({id, handleClick, text}) => (\n  <button className=\"button\" id={id} onClick={handleClick}>\n    {text}\n  </button>\n)\n\nconst Display = ({counter, allClicks}) => {\n  let clicks = \"none\";\n  return (\n    <div>\n      <h3>Counter: {counter}</h3>\n      <p>All clicks made: {clicks}</p>\n    </div>\n  );\n}\n\nconst App = () => {\n  const [counter, setCounter] = useState(0);\n  const [allClicks, setAll] = useState([]);\n\n  const course = 'Half Stack application development';\n  const part1 = 'Fundamentals of React';\n  const exercises1 = 10;\n  const part2 = 'Using props to pass data';\n  const exercises2 = 7;\n  const part3 = 'State of a component';\n  const exercises3 = 14;\n\n  const incr = () => {\n    setAll(allClicks.concat('inc\\n'));\n    setCounter(counter + 1);\n  }\n  const decr = () => {\n    setAll(allClicks.concat('decr\\n'));\n    setCounter(counter > 0 ? counter - 1 : 0);\n  }\n  const setzero = () => {\n    setAll([]);\n    setCounter(0);\n  }\n\n  return (\n    <div>\n      <h1>{course}</h1>\n      <Display counter={counter} allClicks={allClicks}/>\n      <Content names={[part1, part2, part3]} exercises={[exercises1, exercises2, exercises3]}/>\n      <Total total={exercises1 + exercises2 + exercises3}/>\n      <div id=\"wrapper\">\n        <Button \n          handleClick={incr}\n          id={\"incr\"}\n          text={\"increment counter\"}\n        />\n        <Button \n          handleClick={decr}\n          text={\"decrement counter\"}\n        />\n        <Button \n          handleClick={setzero}\n          text={\"set to zero\"}\n        />\n      </div>\n    </div>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}